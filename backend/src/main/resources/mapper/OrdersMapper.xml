<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jida.tijian.mapper.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.jida.tijian.domain.Orders" >
    <id column="orderId" property="orderId" jdbcType="INTEGER" />
    <result column="orderDate" property="orderDate" jdbcType="DATE" />
    <result column="userId" property="userId" jdbcType="VARCHAR" />
    <result column="hpId" property="hpId" jdbcType="INTEGER" />
    <result column="smId" property="smId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="OrdersWithSetmealResultMap" type="com.jida.tijian.domain.Orders" >
    <id column="orderId" property="orderId" jdbcType="INTEGER" />
    <result column="orderDate" property="orderDate" jdbcType="DATE" />
    <result column="userId" property="userId" jdbcType="VARCHAR" />
    <result column="hpId" property="hpId" jdbcType="INTEGER" />
    <result column="smId" property="smId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <association property="setmeal" javaType="com.jida.tijian.domain.Setmeal">
      <id column="sm_id" property="smId" jdbcType="INTEGER" />
      <result column="sm_name" property="name" jdbcType="VARCHAR" />
      <result column="sm_type" property="type" jdbcType="INTEGER" />
      <result column="sm_price" property="price" jdbcType="INTEGER" />
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    orderId, orderDate, userId, hpId, smId, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where orderId = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where orderId = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jida.tijian.domain.Orders" useGeneratedKeys="true" keyProperty="orderId">
    insert into orders (orderDate, userId, 
      hpId, smId, state)
    values (#{orderDate,jdbcType=DATE}, #{userId,jdbcType=VARCHAR}, 
      #{hpId,jdbcType=INTEGER}, #{smId,jdbcType=INTEGER}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jida.tijian.domain.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        orderId,
      </if>
      <if test="orderDate != null" >
        orderDate,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="hpId != null" >
        hpId,
      </if>
      <if test="smId != null" >
        smId,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderDate != null" >
        #{orderDate,jdbcType=DATE},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="hpId != null" >
        #{hpId,jdbcType=INTEGER},
      </if>
      <if test="smId != null" >
        #{smId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jida.tijian.domain.Orders" >
    update orders
    <set >
      <if test="orderDate != null" >
        orderDate = #{orderDate,jdbcType=DATE},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="hpId != null" >
        hpId = #{hpId,jdbcType=INTEGER},
      </if>
      <if test="smId != null" >
        smId = #{smId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where orderId = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jida.tijian.domain.Orders" >
    update orders
    set orderDate = #{orderDate,jdbcType=DATE},
      userId = #{userId,jdbcType=VARCHAR},
      hpId = #{hpId,jdbcType=INTEGER},
      smId = #{smId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where orderId = #{orderId,jdbcType=INTEGER}
  </update>

  <!-- List<CalendarResponseDto> listHospitalAppointmentNumber(List<OrdersMapperDto> ordersMapperDtos);-->

  <select id="listHospitalAppointmentNumber" parameterType="com.jida.tijian.dto.OrdersMapperDto"
          resultType="com.jida.tijian.dto.CalendarResponseDto">
    <foreach collection="list" item="dto" separator="union">
      select #{dto.date} ymd,count(*) existing from orders where orderDate=#{dto.date} and hpId=#{dto.hpId}
    </foreach>
  </select>

  <select id="listOrdersByUserIdAndState" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where userId = #{userId,jdbcType=VARCHAR} 
    and state = #{state,jdbcType=INTEGER}
    order by orderDate desc
  </select>

  <select id="listOrdersByUserId" resultMap="OrdersWithSetmealResultMap">
    select 
    o.orderId, o.orderDate, o.userId, o.hpId, o.smId, o.state,
    s.smId as sm_id, s.name as sm_name, s.type as sm_type, s.price as sm_price
    from orders o
    left join setmeal s on o.smId = s.smId
    where o.userId = #{userId,jdbcType=VARCHAR}
    order by o.orderDate desc
  </select>

</mapper>